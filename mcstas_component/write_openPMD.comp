/*******************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright 1997-2002, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: openPMD_io
*
* %I
*
* Written by: Shervin Nourbakhsh (ILL) & Mads Bertelsen (ESS)
* Date: July 2020
* Origin: ILL & ESS
*
* Detector-like component that writes neutron state parameters into an openPMD-format
* virtual-source neutron file.
*
* %D
* 
*
* 
* 
*
*
* %P
* Input parameters:
*
* %E
*******************************************************************************/

DEFINE COMPONENT write_openPMD
DEFINITION PARAMETERS (useHDF=0, polarisationuse=0, doubleprec=0, verbose=0, int userflag=0)
SETTING PARAMETERS (string filename=0, string userflagcomment="", merge_mpi=1, keep_mpi_unmerged=0)
OUTPUT PARAMETERS (op)
DEPENDENCY "-L.  -Lbuild/lib/"
//DEPENDENCY "-I@MCCODE_LIB@/libs/mcpl -L@MCCODE_LIB@/libs/mcpl -lmcpl"


SHARE
%{
#include "wrap.h"
%}

DECLARE
%{
  //  printf("[DECLARE] declaring openPMD_io\n");
  openPMD_io *op = NULL;
#ifndef USE_MPI
  int mpi_node_rank =0 ;
#endif
  //mcpl_outfile_t outputfile;
  // mcpl_particle_t *particle,Particle;
  // int userflagenabled;
%}
  
/* Neutron parameters: (x,y,z,vx,vy,vz,t,sx,sy,sz,p) */
INITIALIZE
%{
	
	char _outfile_[100]; //to be fixed
  printf("Num particles: %d\n", mcget_ncount()); 
  printf("[INITIALIZE] new openPMD_write\n");
  //if(strcmp(outfile,'\0'))
  //sprintf(outfile, "%s", NAME_CURRENT_COMP);
  printf("Current component: %s\n", NAME_CURRENT_COMP);
  if(strlen(filename)==0){
	  sprintf(_outfile_, "%s", NAME_CURRENT_COMP);
  }else sprintf(_outfile_, "%s", filename);
  
  printf("Output file: %s\n", _outfile_);
#ifdef USE_MPI
   MPI_MASTER(
	        printf("MASTER Output file: %s\n", _outfile_);
		printf("mpi_node_rank = %d\n", mpi_node_rank);
	      );
#endif
   op = openPMD_write(_outfile_, // name of the output file
		      MCCODE_NAME, 
		      MCCODE_VERSION,
		      mcinstrument_name,
		      NAME_CURRENT_COMP,
		      mpi_node_rank
		      );
   // op, output format, , max number of neutrons
   init_write(op, (useHDF ? HDF5 : JSON), mcget_ncount(), mpi_node_rank);  /* JSON or HDF5: enum*/
  printf("[INITIALIZE] Init done\n");
%}

TRACE
%{
  /*printf("[TRACE] trace particle\n");*/
  /* printf("Num particles: %u\n", num_particles()); */
  trace_write(op, x,y,z,
  	          sx,sy,sz,
  	          vx,vy,vz,
  	          t, p); //, userflag);

  SCATTER;
 
%}

SAVE
%{
  printf("[SAVE] \n");
  save_write(op);

/*   #ifdef USE_MPI */
/*   if (merge_mpi && mpi_node_count > 1) { */
/*     mcpl_close_outfile(outputfile); */
/*   } else { */
/*     mcpl_closeandgzip_outfile(outputfile); */
/*   } */
/* #else */
/*   mcpl_closeandgzip_outfile(outputfile); */
/* #endif */

  %}
MCDISPLAY
%{
  /* A bit ugly; hard-coded dimensions. */
  
  line(0,0,0,0.2,0,0);
  line(0,0,0,0,0.2,0);
  line(0,0,0,0,0,0.2);
%}

END
