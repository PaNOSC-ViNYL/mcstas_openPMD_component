/*******************************************************************************
* Instrument: <instrument name>
*
* %I
* Written by: Shervin Nourbakhsh (ILL) and Mads Bertelsen (ESS)
* Date: June 2020
* Origin: DTU
* %INSTRUMENT_SITE: Templates
*
* Simple test instument
*
* %D
* Compile the enclosed snippets this way:
*
* g++ -fpic -shared hello.cpp -o libhello.so
* g++ -fpic -shared hellowrap.cpp -L. -lhello -o libhellowrap.so
*
* - then compile the instrument as usual.
*
* Example: mcrun Test_CppWrap.instr saythis="HelloMcStasWorld"
*
* %P
* saythis: [str] String to be printed from CppWrap initialize section
*
* %L
*
* %E
*******************************************************************************/
DEFINE INSTRUMENT Test_write_openPMD()
/*string saythis="HelloWorld")*/

DECLARE
%{
%}

INITIALIZE
%{
%}

TRACE

COMPONENT origin = Progress_bar()
AT (0, 0, 0) RELATIVE ABSOLUTE

COMPONENT source = Source_simple(
    xwidth=0.1,
    yheight=0.05,
    E0=25, dE=10,
    dist=1, focus_xw=0.05, focus_yh=0.1)
AT (0, 0, 0) RELATIVE origin

// Wish to propagate 1 m to get non zero z / t
COMPONENT prop = Slit(xwidth=1.0, yheight=1.0)
AT (0, 0, 1.0) RELATIVE source

//outfile defaults to the current component name
COMPONENT openPMD_out = write_openPMD(outfile="", useHDF=1)
AT (0, 0, 0) RELATIVE ABSOLUTE

COMPONENT mcpl_out = MCPL_output(filename="mcpl_output.mcpl")
AT (0,0,0) RELATIVE ABSOLUTE

FINALLY
%{
%}

END
